/**
 * @module QTest
 * @description QA and tests
 * @version 1.0
 * @since 1.1
 * @license MIT
 * @author Maximilian Berkmann <maxieberkmann@gmail.com>
 * @copyright Maximilian Berkmann 2016
 * @requires ../essence
 * @requires Maths
 * @requires DOM
 * @namespace
 * @type {{name: string, version: number, run: QTest.run, description: string, dependency: Array, author: string, complete: boolean}}
 * @since 1.1
 * @exports File
 */
function EvtShow(t){alert("	Name: "+t.name+"\nsource: "+t.source+"\ndata: "+t.data+"\ntarget: "+t.target+"\ntime stamp: "+t.timeStamp)}function evtLog(t){for(var e in t)t.hasOwnProperty(e)&&Essence.say(e+": "+t[e])}function InvalidParamError(t,e,r){return this.name="Invalid parameter error",this.fileName=e,this.lineNumber=r,this.message=t||"The parameter used at "+this.lineNumber+" is invalid !",this.stack=(new Error).stack,this}function getTrace(){var t=function(){try{throw Error("")}catch(t){return t}},e=stripPath(t().stack.split("\n").last())
return e.split(" ").last()}function getLineNum(t){return t?getTrace().split(":")[1]:getTrace().get(getTrace().indexOf(":")+1).remove(")")}function testErr(t){try{throw t}catch(e){Essence.say("%cTested error%c:\n"+e.stack,"erro","text-decoration: underline; color: #000;","text-decoration: none; color: #000;")}}function noobTest(t,e){try{t(e)}catch(r){location.href="http://Stackoverflow.com/search?q=[js]+"+r.message}}var QTest={name:"QTest",version:1,run:function(){},description:"QA and tests",dependency:["Maths","DOM"],author:"Maximilian Berkmann",complete:!1,toString:function(){return"Module(name='"+this.name+"', version="+this.version+", description='"+this.description+"', author='"+this.author+"', complete="+this.complete+", run="+this.run+")"}}
!function(){QTest.complete=!0}(),InvalidParamError.inheritsFrom(Error)
var UnitTest={total:0,bad:0,failRate:0,coverage:0,test:function(t,e,r){this.total++
var n=t
n.equals(e)&&n===e?r&&n.equals(e)&&console.log("[Unit] The expection on "+e+"was satisfied !"):(this.bad++,console.log("[Unit] Expected "+e+" but was "+n))},reset:function(){this.total=0,this.bad=0,this.failRate=0,this.coverage=0},multiTest:function(t){this.reset(),console.time("Unit test")
for(var e=0;e<t.length-1;e+=1)this.test(t[e],t[e+1])
console.timeEnd("Unit test"),this.report()},report:function(){this.failRate=markConv(this.bad,this.total),console.info("[Unit] Pass/Fail: "+(this.total-this.bad)+"/"+this.bad+" ("+this.failRate+"%); on "+BrowserDetect.info())}}

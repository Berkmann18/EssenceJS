function EvtShow(t){alert("	Name: "+t.name+"\nsource: "+t.source+"\ndata: "+t.data+"\ntarget: "+t.target+"\ntime stamp: "+t.timeStamp)}function evtLog(t){for(var e in t)t.hasOwnProperty(e)&&Essence.say(e+": "+t[e])}function InvalidParamError(t,e,r){return this.name="Invalid parameter error",this.fileName=e,this.lineNumber=r,this.message=t||"The parameter used at "+this.lineNumber+" is invalid !",this.stack=(new Error).stack,this}function getTrace(){var t=function(){try{throw Error("")}catch(t){return t}},e=stripPath(t().stack.split("\n").last())
return e.split(" ").last()}function getLineNum(t){return t?getTrace().split(":")[1]:getTrace().get(getTrace().indexOf(":")+1).remove(")")}function testErr(t){try{throw t}catch(e){Essence.say("%cTested error%c:\n"+e.stack,"erro","text-decoration: underline; color: #000;","text-decoration: none; color: #000;")}}function noobTest(t,e){try{t(e)}catch(r){location.href="http://Stackoverflow.com/search?q=[js]+"+r.message}}function test(fx){try{isType(fx,"String")?eval(fx):fx(arguments.toArray().get(1))}catch(e){Essence.handleError(e+"\n",getFilename(!0),getLineNum(!0))}}var QTest=new Module("QTest","QA and tests",["Maths","DOM"])
InvalidParamError.inheritsFrom(Error)
var UnitTest={total:0,bad:0,failRate:0,coverage:0,test:function(t,e,r){this.total++
var a=t
a.equals(e)&&a===e?r&&a.equals(e)&&console.log("[Unit] The expection on "+e+"was satisfied !"):(this.bad++,console.log("[Unit] Expected "+e+" but was "+a))},reset:function(){this.total=0,this.bad=0,this.failRate=0,this.coverage=0},multiTest:function(t,e){this.reset(),console.time("Unit test")
for(var r=0;r<t.length-1;r+=1)this.test(t[r],t[r+1],e)
console.timeEnd("Unit test"),this.report()},report:function(){this.failRate=markConv(this.bad,this.total),console.info("[Unit] Pass/Fail: "+(this.total-this.bad)+"/"+this.bad+" ("+this.failRate+"%); on "+BrowserDetect.info())}}

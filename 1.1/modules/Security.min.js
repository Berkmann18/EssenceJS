/**
 * @module Security
 * @description Security/Hacking stuff
 * @version 1.0
 * @since 1.1
 * @license MIT
 * @author Maximilian Berkmann <maxieberkmann@gmail.com>
 * @copyright Maximilian Berkmann 2016
 * @requires module:essence
 * @requires Maths
 * @requires DOM
 * @requires QTest
 * @type {Module}
 * @exports Security
 */
function trans(e,a){var r=e.charCodeAt(0)
return String.fromCharCode(r+a)}function encrypt(e,a){if(!a){var r=e.length,s=0,c=Math.floor(r/2)
c=r%2===0?e.charCodeAt(c):(e.charCodeAt(e[c-1])+e.charCodeAt(e[c]))/2,s=c>=97&&c<=122?2:c>=65&&c<=90?1:c-2*Math.floor(c/2)===0?-1:2,a=Math.round((Math.pow(2,7)+e.sum()-48)/e.prod())+s}for(var t="",n=0;n<e.length;n++)t+=trans(e[n],a)
return r=c=s=void 0,t}function decrypt(e,a){var r=""
if(a)for(var s=1;s<=e.length;s++)r+=trans(e[s-1],a)
else for(r=new Array(131073),s=-65536;s<65537;s++){r[s+65536]=""
for(var c=0;c<e.length;c++)r[s+65536]+=trans(e[c],s%65537)}return a||console.log(console.table(r)),a?r:complexTable("Decryption result for <i>"+e+"</i>",range(-65536,1,65536),r,["Key","Result"],"decrypted_"+e,!1)}function abcEncode(e){var a=new Array(e.length)
if(isType(e,"String")||isType(e,"Array")){for(var r in e)if(e.hasOwnProperty(r))switch(e[r]){case" ":a[r]="00"
break
case"a":a[r]="01"
break
case"b":a[r]="02"
break
case"c":a[r]="03"
break
case"d":a[r]="04"
break
case"end":a[r]="05"
break
case"f":a[r]="06"
break
case"g":a[r]="07"
break
case"height":a[r]="08"
break
case"i":a[r]="09"
break
case"j":a[r]="10"
break
case"k":a[r]="11"
break
case"l":a[r]="12"
break
case"m":a[r]="13"
break
case"n":a[r]="14"
break
case"o":a[r]="15"
break
case"p":a[r]="16"
break
case"q":a[r]="17"
break
case"rad":a[r]="18"
break
case"start":a[r]="19"
break
case"t":a[r]="20"
break
case"u":a[r]="21"
break
case"v":a[r]="22"
break
case"width":a[r]="23"
break
case"x":a[r]="24"
break
case"y":a[r]="25"
break
case"z":a[r]="26"
break
case".":a[r]="27"
break
case",":a[r]="28"
break
case"!":a[r]="29"
break
case"?":a[r]="30"
break
case"(":a[r]="31"
break
case")":a[r]="32"
break
case":":a[r]="33"
break
case";":a[r]="34"
break
case"@":a[r]="35"
break
case"~":a[r]="36"
break
case"'":a[r]="37"
break
case'"':a[r]="38"
break
case"#":a[r]="39"
break
case"{":a[r]="40"
break
case"}":a[r]="41"
break
case"-":a[r]="42"
break
case"\\":a[r]="43"
break
case"/":a[r]="44"
break
case"£":a[r]="45"
break
case"$":a[r]="46"
break
case"€":a[r]="47"
break
case"+":a[r]="48"
break
case"*":a[r]="49"
break
case"%":a[r]="50"
break
case"^":a[r]="51"
break
case"°":a[r]="52"
break
case"A":a[r]="53"
break
case"B":a[r]="54"
break
case"C":a[r]="55"
break
case"D":a[r]="56"
break
case"E":a[r]="57"
break
case"F":a[r]="58"
break
case"G":a[r]="59"
break
case"H":a[r]="60"
break
case"I":a[r]="61"
break
case"J":a[r]="62"
break
case"K":a[r]="63"
break
case"L":a[r]="64"
break
case"M":a[r]="65"
break
case"N":a[r]="66"
break
case"O":a[r]="67"
break
case"P":a[r]="68"
break
case"Q":a[r]="69"
break
case"R":a[r]="70"
break
case"S":a[r]="71"
break
case"T":a[r]="72"
break
case"U":a[r]="73"
break
case"V":a[r]="74"
break
case"W":a[r]="75"
break
case"X":a[r]="76"
break
case"Y":a[r]="77"
break
case"Z":a[r]="78"
break
default:a[r]="x"}return isType(e,"String")?a.join(""):a}return Essence.say("The parameter of abcEncode must be a string or an array.","err")}function abcDecode(e){var a=new Array(e.length)
if(isType(e,"String")||isType(e,"Array")){for(var r=0;r<e.length;r+=2)switch(e.substr(r,2)){case"00":a[r]=" "
break
case"01":a[r]="a"
break
case"02":a[r]="b"
break
case"03":a[r]="c"
break
case"04":a[r]="d"
break
case"05":a[r]="end"
break
case"06":a[r]="f"
break
case"07":a[r]="g"
break
case"08":a[r]="height"
break
case"09":a[r]="i"
break
case"10":a[r]="j"
break
case"11":a[r]="k"
break
case"12":a[r]="l"
break
case"13":a[r]="m"
break
case"14":a[r]="n"
break
case"15":a[r]="o"
break
case"16":a[r]="p"
break
case"17":a[r]="q"
break
case"18":a[r]="rad"
break
case"19":a[r]="start"
break
case"20":a[r]="t"
break
case"21":a[r]="u"
break
case"22":a[r]="v"
break
case"23":a[r]="width"
break
case"24":a[r]="x"
break
case"25":a[r]="y"
break
case"26":a[r]="z"
break
case"27":a[r]="."
break
case"28":a[r]=","
break
case"29":a[r]="!"
break
case"30":a[r]="?"
break
case"31":a[r]="("
break
case"32":a[r]=")"
break
case"33":a[r]=":"
break
case"34":a[r]=";"
break
case"35":a[r]="@"
break
case"36":a[r]="~"
break
case"37":a[r]="'"
break
case"38":a[r]='"'
break
case"39":a[r]="#"
break
case"40":a[r]="{"
break
case"41":a[r]="}"
break
case"42":a[r]="-"
break
case"43":a[r]="\\"
break
case"44":a[r]="/"
break
case"45":a[r]="£"
break
case"46":a[r]="$"
break
case"47":a[r]="€"
break
case"48":a[r]="+"
break
case"49":a[r]="*"
break
case"50":a[r]="%"
break
case"51":a[r]="^"
break
case"52":a[r]="°"
break
case"53":a[r]="A"
break
case"54":a[r]="B"
break
case"55":a[r]="C"
break
case"56":a[r]="D"
break
case"57":a[r]="E"
break
case"58":a[r]="F"
break
case"59":a[r]="G"
break
case"60":a[r]="H"
break
case"61":a[r]="I"
break
case"62":a[r]="J"
break
case"63":a[r]="K"
break
case"64":a[r]="L"
break
case"65":a[r]="M"
break
case"66":a[r]="N"
break
case"67":a[r]="O"
break
case"68":a[r]="P"
break
case"69":a[r]="Q"
break
case"70":a[r]="R"
break
case"71":a[r]="S"
break
case"72":a[r]="T"
break
case"73":a[r]="U"
break
case"74":a[r]="V"
break
case"75":a[r]="W"
break
case"76":a[r]="X"
break
case"77":a[r]="Y"
break
case"78":a[r]="Z"
break
default:a[r]=0}return isType(e,"String")?a.join(""):a}return Essence.say("The parameter of abcDecode must be a string or an array.","err")}function ilEncrypt(e){for(var a=isType(e,"String")?e.split(""):e,r=0;r<a.length;r++)a[r]=String.fromCharCode(e[r].charCodeAt(0)+2*e.length)
return isType(e,"String")?a.join(""):a}function ilDecrypt(e){for(var a=isType(e,"String")?e.split(""):e,r=0;r<a.length;r++)a[r]=String.fromCharCode(e[r].charCodeAt(0)-2*e.length)
return isType(e,"String")?a.join(""):a}function computeRSA(e,a,r){if(0===arguments.toArray().length&&(e=bruteForceNum(23,"isPrime(x)",99),a=bruteForceNum(23,"isPrime(x) && x!="+e,99)),!isPrime(e))throw new Error("p="+e+"; isn't a prime number !!")
if(!isPrime(a))throw new Error("q="+a+"; isn't a prime number !!");(e<20||a<20)&&Essence.say("p/q should be bigger !","warn")
var s,c=e*a,t=(e-1)*(a-1),n=bruteForceNum(2,"1<x<"+c+" && gcd(x,"+t+")==1",c+1)
return s=bruteForceNum(0,"(x*"+n+")%"+t+"==1",c),Essence.say([c,s]),r?[[c,s],[c,n]]:[c,n]}function cryptRSA(e,a){return Math.pow(e,a[1])%a[0]}function RSA(e,a){return a||(a=computeRSA()),e.map(function(e){return String.fromCharCode(abcModulus(cryptRSA(e.charCodeAt(0),a)))})}function genPassword(){for(var e=[],a=["&","~",'"',"#","'","{","[","(","-","|","`","_","\\","^","@",")","]"," + ","=","}"," % "," * ","?",",",";",".","/",":","!"," ",""],r="",s=65;s<123;s++)(s<=90||s>=97)&&(e[s-65]=String.fromCharCode(s))
for(e=e.concat(a,range(9)).remove();r.length<20;)r+=e.rand()
return r.length<20&&(r+=e.rand()),r}function hash(e){var a=getStep(e.split("").map(function(e){return e.charCodeAt(0)}).min(),e.split("").map(function(e){return e.charCodeAt(0)}).max()),r=e.split(""),s=r.even().concat(r.odd()).join("").map(function(e){return String.fromCharCode(abcModulus(e.charCodeAt(0)+a))})
return toFSHA(s.split("").portion(2).concat(s.split("").portion(-2)).join(""))}function toFSHA(e){return e.map(function(e){return/[A-Za-z]/.test(e)?e:e.charCodeAt(0)})}function fromFSHA(e){for(var a="",r=0;r<e.length;r++)if(/[A-Za-z]/.test(e[r]))a+=e[r]
else if(/\d+/.test(e[r])){for(var s=r+1;s<e.length-1&&/\d+/.test(e[s]);)s++
a+=String.fromCharCode(e.get(r,s-1)),r=s-1}return a}function DES(e,a){for(var r=e.portion(2,-1),s=e.portion(2,1),c=1;c<16;c++)r[c]=s[c-1],console.log("l[%d]=%s ^ (trans(%s, %d)=%s) = %s",c-1,r[c-1],s[c-1],a[c],trans(s[c-1],a[c]),r[c-1]^trans(s[c-1],a[c])),s[c]=String.fromCharCode(r.charCodeAt(c-1)^trans(s[c-1],a[c]).charCodeAt(0))
return r.concat(s)}function checkPassword(e,a){var r=0,s=0,c=0,t=0,n=0,b=0,k=0,o=0,i=0,h=0,u=0,g=0,l=0,p=0,f=0,d=0,m=2,y=2,C=2,v=2,A=3,S=3,w=3,I=4,T=4,M=6,x="",E="",L="",R=8,j="abcdefghijklmnopqrstuvwxyz",F="01234567890",P=")!@#$%^&*()"
r=parseInt(e.length*I)
for(var D=e.replace(/\s+/g,"").split(/\s*/),z=0;z<D.length;z++){D[z].match(/[A-Z]/g)?(""!==x&&x+1===z&&h++,x=z,s++):D[z].match(/[a-z]/g)?(""!==E&&E+1===z&&u++,E=z,c++):D[z].match(/[0-9]/g)?(z>0&&z<D.length-1&&b++,""!==L&&L+1===z&&g++,L=z,t++):D[z].match(/[^a-zA-Z0-9_]/g)&&(z>0&&z<D.length-1&&b++,n++)
for(var N=!1,Z=0;Z<D.length;Z++)D[z]===D[Z]&&z!=Z&&(N=!0,i+=Math.abs(D.length/(Z-z)))
N&&(o++,k=D.length-o,i=k?Math.ceil(i/k):Math.ceil(i))}for(var q=0;q<23;q++){var H=j.substring(q,parseInt(q+3)),O=H.reverse();(e.toLowerCase().has(H)||e.toLowerCase().has(O))&&l++}for(q=0;q<8;q++)H=F.substring(q,parseInt(q+3)),O=H.reverse(),(e.toLowerCase().has(H)||e.toLowerCase().has(O))&&p++
for(q=0;q<8;q++)H=P.substring(q,parseInt(q+3)),O=H.reverse(),(e.toLowerCase().has(H)||e.toLowerCase().has(O))&&f++
s>0&&s<e.length&&(r=parseInt(r+2*(e.length-s))),c>0&&c<e.length&&(r=parseInt(r+2*(e.length-c))),t>0&&t<e.length&&(r=parseInt(r+t*T)),n>0&&(r=parseInt(r+n*M)),b>0&&(r=parseInt(r+b*m)),(c>0||s>0)&&0===n&&0===t&&(r=parseInt(r-e.length)),0===c&&0===s&&0===n&&t>0&&(r=parseInt(r-e.length)),o>0&&(r=parseInt(r-i)),h>0&&(r=parseInt(r-h*y)),u>0&&(r=parseInt(r-u*C)),g>0&&(r=parseInt(r-g*v)),l>0&&(r=parseInt(r-l*A)),p>0&&(r=parseInt(r-p*S)),f>0&&(r=parseInt(r-f*w))
for(var V=[e.length,s,c,t,n],G=["nLength","nAlphaUC","nAlphaLC","nNumber","nSymbol"],K=0;K<V.length;K++){var Q="nLength"===G[K]?parseInt(R-1):0;(V[K]===parseInt(Q+1)||V[K]>parseInt(Q+1))&&d++}var U=e.length>=R?3:4
d>U&&(r=parseInt(r+2*d)),a||(r=clamp(r,0,100))
var W
return W=r<0?"Really weak":r>=0&&r<20?"Very weak":r>=20&&r<40?"Weak":r>=40&&r<60?"Good":r>=60&&r<80?"Strong":r>=80&&r<=100?"Very strong":r>100?"Really strong":"Too short",a?r:[r+"%",W]}var Security=new Module("Security","Security stuff",["Maths","DOM","QTest"])
